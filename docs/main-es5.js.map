{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/youtube.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","NavbarComponent","HomeComponent","youtubeService","videos","cargarVideos","getVideos","subscribe","resp","push","console","log","err","mostrarError","video","fire","html","resourceId","videoId","icon","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","YoutubeService","http","youtubeUrl","apiKey","playlist","nextPageToken","url","params","set","get","pipe","items","map","snippet","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'youtubeApp';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n\n</div>\n\n<app-home></app-home>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './pages/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light  bg-danger\">\n    <span class=\"navbar-brand text-white mb-0 h1\">Youtube App</span>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Video } from 'src/app/models/youtube.models';\nimport { YoutubeService } from 'src/app/services/youtube.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private youtubeService:YoutubeService) { }\n\n  videos: Video[] = [];\n\n  ngOnInit(): void {\n\n    this.cargarVideos();\n\n  }\n\n  cargarVideos() {\n\n    \n    this.youtubeService.getVideos()\n        .subscribe( resp => {\n\n          this.videos.push(...resp);\n          console.log(this.videos);\n          \n        }, err => {\n          this.mostrarError();\n        });\n\n  }\n\n  mostrarVideo( video:Video ) {\n      \n      Swal.fire({\n        html: `\n        <h4> ${ video.title } </h4>\n        <iframe width=\"100%\"\n                       height=\"315\"\n                       src=\"https://www.youtube.com/embed/${ video.resourceId.videoId }\"\n                       frameborder=\"0\"\n                       allow=\"accelerometer;\n                       autoplay;\n                       clipboard-write;\n                       encrypted-media;\n                       gyroscope;\n                       picture-in-picture\"\n                       allowfullscreen>\n               </iframe>`\n      })\n  }\n\n  mostrarError() {\n\n    Swal.fire({\n      title: 'No hay m√°s videos',\n      icon: 'info',\n      html:\n        'Ya viste todos los videos del canal',\n      showCloseButton: true,\n      showCancelButton: true,\n      focusConfirm: false,\n      confirmButtonText:\n        '<i class=\"fa fa-close\"></i> Cerrar',\n    })\n\n  }\n\n}\n","<div class=\"row row-cols-1 row-cols-md-4 m-4\">\n\n\n    <div *ngFor=\"let video of videos\" class=\"col mb-4 animate__animated animate__fadeIn\">\n      <div class=\"card\">\n        <img [src]=\"video.thumbnails.high.url\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ video.title }}</h5>\n          <p class=\"card-text\">{{ video.description | slice:0:50 }}... </p>\n\n          <p class=\"card-text\">\n            <strong>Autor:</strong> {{ video.channelTitle }} \n          </p>\n\n          <p class=\"card-text\">\n            <strong>Publicado:</strong> {{ video.publishedAt | date:'dd/MM/yyyy' }} \n          </p>\n\n          <button (click)=\"mostrarVideo( video )\"\n                  class=\"btn btn-outline-danger btn-block\">\n              Ver video\n          </button>\n\n        </div>\n      </div>\n    </div>\n\n</div>\n\n<div class=\"row mt-5 mb-5 text-center\">\n\n    <div class=\"col\">\n        <button (click)=\"cargarVideos()\"\n                 class=\"btn btn-primary btn-lg\">\n            Cargar m√°s videos\n        </button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { YoutubeResponse } from '../models/youtube.models';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YoutubeService {\n\n  private youtubeUrl    = 'https://www.googleapis.com/youtube/v3';\n  private apiKey       = 'AIzaSyC0zll75H4Cp7tDsOT74HOWrfvmfAewL_o';\n  private playlist      = 'UUlx9gLfTq0gX8oC0j_nkAGw';\n  private nextPageToken = '';\n\n  constructor(private http: HttpClient) { \n\n  }\n\n\n  getVideos() {\n\n    const url = `${ this.youtubeUrl }/playlistItems`;\n\n    const params = new HttpParams().set('part', 'snippet')\n                                   .set('maxResults', '10')\n                                   .set('playlistId', this.playlist)\n                                   .set('key', this.apiKey)\n                                   .set('pageToken', this.nextPageToken)\n\n    \n    return this.http.get<YoutubeResponse>(url, { params })\n             .pipe(\n\n               //Como en este map tengo mas de 1 linea, tengo que usar llaves y el return\n               map(resp => {\n                this.nextPageToken = resp.nextPageToken;\n                return resp.items;\n               }),\n\n               //Como en este map tengo una sola linea, no hace falta usar llaves ni el return\n               map(items => items.map(video => video.snippet))\n\n             )\n\n  }\n\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}